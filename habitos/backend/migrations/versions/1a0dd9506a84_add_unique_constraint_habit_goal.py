"""add_unique_constraint_habit_goal

Revision ID: 1a0dd9506a84
Revises: a4f10bf474e0
Create Date: 2025-07-23 17:30:12.785739

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1a0dd9506a84'
down_revision: Union[str, Sequence[str], None] = 'a4f10bf474e0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, remove duplicate goals (keep the most recent one for each habit_id, user_id combination)
    connection = op.get_bind()
    
    # Find and delete duplicate goals, keeping the most recent one
    duplicate_goals = connection.execute(sa.text("""
        DELETE FROM goals 
        WHERE id NOT IN (
            SELECT DISTINCT ON (habit_id, user_id) id 
            FROM goals 
            ORDER BY habit_id, user_id, created_at DESC
        )
    """))
    
    # Now add the unique constraint
    op.create_unique_constraint('unique_habit_goal', 'goals', ['habit_id', 'user_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('unique_habit_goal', 'goals', type_='unique')
    # ### end Alembic commands ###
